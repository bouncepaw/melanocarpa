While having an insomnia, I came up with an idea of a ridiculous project that would be both hard to implement and of very little utility. Introducing **UXN Legoptics**, an optical [[Uxn]] ROM executor project. The name is a portmanteau of Uxn, Lego and optics. Such a combination cannot be boring. Read further!

**NB.** I'm not starting it any time soon.

= The idea
=> https://merveilles.town/@bouncepaw/111507134920805381 | I've said once:
> Wintergatan's first Marble Machine is programmed with Lego pins. When I make my own mechanical computer, It'll be programmed with Lego pins too. It's cooler than [[punch card]]s!

The Legoptics project is not a fully mechanical computer though. I shall call the device Xunotron for the rest of the article for the ease of read.

= Xunotron's architecture
* A computer screen, connected with an HDMI to
* [[Emondsfield]], a single-plate computer I no longer use, connected to
* A small camera module which was designed Raspberry π, but is probably compatible with Orange π, which is stationed to look at
* A rotating ribbon made of Lego pieces. Each line has pins that encode ROM's bits.
* The ribbon is lit with an LED from behind.

= The Machine Word
The beet processor has 8-bit-wide bytes and machine words. But Xunotron Mark 1 has 10-bit-wide words!

* Bit 1 is an always empty hole. Because of the LED, it's always lit and bright, so it will be easier to write the optical recognition software.
* Bit 2 is the XUN bit.
* If XUN bit is clear:
** Bits 3 to 10 are regular UXN bits that are passed along to the emulator.
* If XUN bit is set:
** Bits 3 to 10 are reserved for some meta-operations that might alter the program flow somehow.