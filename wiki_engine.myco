**Wiki engine** is a program that powers a [[wiki]]. My wiki engine of choice is [[Mycorrhiza]] of course.

= Links
=> https://github.com/interstar/cardigan-bay interstar/cardigan-bay: A new wiki engine in Clojure

=> https://github.com/zadam/trilium Trilium Notes is a hierarchical note taking application with focus on building large personal knowledge bases

=> https://peppermint.mooncarrot.space/ Pepperminty Wiki
> [[https://github.com/sbrl/Pepperminty-Wiki | Pepperminty Wiki]] is a complete wiki engine contained in a single file, inspired by @am2064's [[https://github.com/am2064/Minty-Wiki | Minty Wiki]]. Developed by Starbeamrainbowlabs (though contributions from others are welcome!), Pepperminty Wiki has a variety of useful (and cool!) features - such as file upload, a dynamic help page, page revision history, page tags, and more! Other amazing features are in the works too (like a theme gallery, auto update, and user watchlists), so check the release notes to see what's been added recently.

=> https://amusewiki.org/special/index | News | A·Muse·Wiki
> This is the homepage for amusewiki, a library-oriented wiki engine. Amusewiki is more than just a wiki engine, it’s also a powerful authoring, archiving and publishing platform.

=> https://beza1e1.tuxen.de/tipiwiki.html | TipiWiki (2003)
> Over fifteen years ago I published "TipiWiki" when I was still in school. I never really used it and it is abandoned for over a decade now. However other people grew it into a big successful project.

=> https://krypted.com/mac-os-x/migrating-data-apple-wiki-server/ | Migrating Data From The Apple Wiki Server - krypted
> The Apple Wiki Server is sadly going away. I always liked this service. It was thoughtfully designed and looked much nicer than most of the other tools available out there. Sure, you couldn’t write articles offline, write in markdown, or do a lot of other things that I’ve learned to both love and hate from other solutions, but honestly it always felt the most Apple of services in macOS Server because it didn’t have every-single-checkbox. So, I’ll pour a little Jaëger on the ground in memory of the wiki server and then… export some stuffs and move on. 

=> gemini://alexschroeder.ch:1965/page/2021-07-23_Phoebe_4_released
=> https://alexschroeder.ch:1965/page/2021-07-23_Phoebe_4_released
> This leads me to the next issue I finally fixed. I really wanted better documentation. I’m not happy with how documentation for Oddmuse code ended up on the wiki. I keep thinking about that old adage: “wiki wiki is short for can’t find shit.” For this code, I wanted the code to be part of the source file such that sites like metacpan display it correctly. I also wanted to concatenate all the documentation into a single README document to use as a manual, and to have that show on code hosting services like cgit. This required some improvements to my ‘update-readme’ script, but I think it was worth it.