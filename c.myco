**C** is one of the most known programming languages. Its key features include ‘simplicity’, unfriendliness and lack of many helpful abstractions. Overall, it is a nice experience.

= Links

=> https://justine.lol/ape.html
=> https://justine.lol/cosmopolitan/index.html | cosmopolitan libc
> Cosmopolitan makes C a build-once run-anywhere language, similar to Java, except it doesn't require interpreters or virtual machines be installed beforehand. Cosmo provides the same portability benefits as high-level languages like Go and Rust, but it doesn't invent a new language and you won't need to configure a CI system to build separate binaries for each operating system. What Cosmopolitan focuses on is fixing C by decoupling it from platforms, so it can be pleasant to use for writing small unix programs that are easily distributed to a much broader audience.

----

=> https://nullprogram.com/blog/2021/07/30/ | strcpy: a niche function you don't need
Милая напоминалка.

----

=> https://hackaday.com/2021/11/18/c-is-the-greenest-programming-language/ | C is the greenest programming language

Greenest meaning least impactful on the Earth environment. Combined with its portability, C might be the best language for the most sustainable systems.

----

=> http://doc.cat-v.org/bell_labs/pikestyle | Rob Pike: Notes on Programming in C

A read.

----

=> http://aiju.de/misc/c-style | aiju: Notes On Programming In C
> Do not use const or restrict. const does not have any effect during runtime. restrict can introduce extra bugs. Both have no real use.
>
> Many people seem to like const claiming that it "prevents bugs". I'm honestly not sure if I have ever come across a single bug that would have been prevented by const. Even if there is the odd examples for which it is true, const is a cancer that spreads through entire codebases as the only sane way to use it is to use it consistently (or else you require casts which could mask real bugs). Considering that it serves little to no purpose it's, in my opinion, just not worth effort. If you do find yourself stuck with code that insists on it, the magic incantation is #define const.

----
=> https://club.hugeping.ru/9Qqh3fEBRA9SW48rMQhh#9Qqh3fEBRA9SW48rMQhh | Си должен умереть?
> Как программист на Си, я понимаю, что по современным меркам этот язык нарушает все мыслимые правила приличия. Но при этом я действительно НЕ ВИЖУ адекватной замены в той сфере где он применяется. Это как с самолётами. Неустойчивый самолёт -- маневренный и опасный. Устойчивый -- безопасный и неманевренный. Что выбрать? Что-то среднее? Чем мы готовы пожертвовать?
>
> ...
>
> Да, работая на индустрию не удастся вернуться в прошлое. Однако, Plan9 научил меня тому, что во многих случаях у меня, как у программиста, всё-таки есть свобода избежать сложного кода, в том числе ценой выбора более подходящей архитектуры. Например, написав небольшое ядро приложения на Си и функциональную часть на Lua. Если я вижу, что код на Си становится сложным, это повод остановиться. Стоп! Что-то не так!

----
=> https://multun.net/obscure-c-features.html | Some obscure C features - Pancakes and computers
> The current most used version of the language, c99, brought a bunch of new features, many of which are completely unknown to most C programmers (Older specifications obviously also have some dark corners).
----
=> https://gankra.github.io/blah/c-isnt-a-language | C Isn't A Programming Language Anymore
> C is the lingua franca of programming. We must all speak C, and therefore C is not just a programming language anymore – it’s a protocol that every general-purpose programming language needs to speak.

----
=> https://wordsandbuttons.online/so_you_think_you_know_c.html | So you think you know C?
> If you think it is — take this test. It only has 5 questions. Every question is basically the same: what the return value would be? And each question has a choice of four answers, of which one and only one is right.
The results will not shock you.
