[[2022-03-27]] Today I tried out the [[uxn]] virtual computer. I used the offered emulator for [[mac OS]]. Made some screenshots along the way.

img {
   ./left { Text editor. }
   ./launcher { Launcher. Shows file in the folder where the emulator is. }
   ./bad apple { [[https://github.com/karolbelina/bad-apple-uxn | Bad Apple!!]] }
}

//Uxn// seems to be a graphic-only environment. This computer might be the platform I was missing. What other projects are similar to //uxn//? [[pico-8]]?

//Uxn// is programmed in its own assembly language. I never programmed in assembly before or in a stack language. Might also consider the assembly as a target for my own programming language!

I wonder if //uxn// can communicate with a hosting computer, i/e return an exit code or read/write a file.

I have a [[Nintendo 3DS]] back home. It supports [[Nintendo DS]] cartridges, and //uxn// is ported to it. Too bad my R4 flash cart is broken. Will try to run //uxn// on 3DS one day.

= Discussion
=> https://lor.sh/web/statuses/108029642813281099 | On Mastodon

Devine responded with something I want to store here:
> Uxn is not only graphic, for example, my wiki is written in uxn, and generated through a terminal script: https://github.com/XXIIVV/oscean/blob/main/src/oscean.tal 
>
> Uxn is not really similar to Pico8, since Uxn is a VM. A similar project might be more like Another World: https://fabiensanglard.net/another_world_polygons/
>
> To communicate with the host system, you can use the file devices to save/load, or the console to stream bytes. That's how the launcher loads roms, and that's how orca sends midi.

Seems like [[oscean]] is written in [[uxntal]] now! It used to be written in [[C]]. Also, the capability to communicate with the host system is great.